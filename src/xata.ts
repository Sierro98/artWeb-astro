// Generated by Xata Codegen 0.29.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "works",
    columns: [
      { name: "price", type: "float", notNull: true, defaultValue: "0.0" },
      { name: "name", type: "string", notNull: true, defaultValue: "Anon" },
      {
        name: "es_description",
        type: "string",
        notNull: true,
        defaultValue: "Anon",
      },
      { name: "collection", type: "link", link: { table: "capsules" } },
      { name: "images", type: "file" },
      {
        name: "en_description",
        type: "string",
        notNull: true,
        defaultValue: "Unknown",
      },
    ],
  },
  {
    name: "authors",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "Anon" },
      { name: "art_name", type: "string", unique: true },
      { name: "description", type: "string" },
      { name: "surname", type: "string", notNull: true, defaultValue: "Anon" },
    ],
    revLinks: [{ column: "author", table: "capsules" }],
  },
  {
    name: "capsules",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "author", type: "link", link: { table: "authors" } },
      {
        name: "end_date",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
      { name: "head_image", type: "file" },
    ],
    revLinks: [
      { column: "collection", table: "works" },
      { column: "capsule", table: "home_show" },
    ],
  },
  {
    name: "home_show",
    columns: [
      { name: "capsule", type: "link", link: { table: "capsules" } },
      { name: "Carousel", type: "string", unique: true },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Works = InferredTypes["works"];
export type WorksRecord = Works & XataRecord;

export type Authors = InferredTypes["authors"];
export type AuthorsRecord = Authors & XataRecord;

export type Capsules = InferredTypes["capsules"];
export type CapsulesRecord = Capsules & XataRecord;

export type HomeShow = InferredTypes["home_show"];
export type HomeShowRecord = HomeShow & XataRecord;

export type DatabaseSchema = {
  works: WorksRecord;
  authors: AuthorsRecord;
  capsules: CapsulesRecord;
  home_show: HomeShowRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Alejandro-Sierro-s-workspace-gjdu7j.eu-central-1.xata.sh/db/project-mz",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient({
    apiKey: import.meta.env.XATA_API_KEY,
    branch: import.meta.env.XATA_BRANCH,
  });
  return instance;
};
