---
import { Image } from "astro:assets";
import { localizePath } from "../../node_modules/astro-i18next";
import { getXataClient } from "../xata";

const xata = getXataClient();

const capsule2show = await xata.db.home_show.select(["id", "capsule.name"]).getFirst();
const capsuleImg = await xata.db.works
  .filter("collection.name", capsule2show?.capsule?.name)
  .sort("name", "asc")
  .getPaginated({ pagination: { size: 5 } });

const imgDescription: string = "JavatoGarabato Art";
const imgWidth = 500;
const imgHeight = 450;
---

<div class="pb-12">
  <a href={localizePath(`/capsules/${capsule2show?.capsule?.name}`)} class="scroll">
    <div class="scroll-slide">
      {
        capsuleImg.records.map((record) => {
          return (
            <Image
              format="avif"
              quality={"max"}
              src={record.images?.url || ""}
              alt={imgDescription}
              width={imgWidth}
              height={imgHeight}
            />
          );
        })
      }
    </div>
    <div class="scroll-slide">
      {
        capsuleImg.records.map((record) => {
          return (
            <Image
              format="avif"
              quality={"max"}
              src={record.images?.url || ""}
              alt={imgDescription}
              width={imgWidth}
              height={imgHeight}
            />
          );
        })
      }
    </div>
  </a>
</div>

<style>
  .scroll {
    display: block;
    position: relative;
    width: 100%;
    height: 450px;
    background-color: transparent;
    overflow: hidden !important;
    white-space: nowrap;
    z-index: 1;
  }
  .scroll-slide {
    animation: scrollImage 50s infinite linear;
    display: inline-block;
    justify-content: space-between;
    align-items: center;
    position: relative;
    white-space: nowrap;
  }
  .scroll img {
    height: 450px;
    min-width: 500px;
    object-fit: cover;
    display: inline-block;
    margin: 0 20px;
    color: white;
  }
  @keyframes scrollImage {
    from {
      transform: translateX(-100%);
    }
    to {
      transform: translateX(0%);
    }
  }
</style>
